name: Deployment for Localing SSR API.

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - master

env:
  ENVIRONMENT: ${{ (github.ref == 'refs/heads/master' && 'prod') || (github.ref == 'refs/heads/develop' && 'dev') }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install SAM
        run: |
          python -m pip install --upgrade pip
          pip install aws-sam-cli

      - name: Set up Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12

      - name: Install npm packages for Nuxt App
        run: |
          npm install

      - name: Lint and Formetter JS & Vue
        run: |
          npm run lint
          npm run lintfix

      - name: Build Nuxt
        run: |
          npm run build:$ENVIRONMENT

      - name: Deploy Static Assets to S3
        run: |
          aws s3 sync .nuxt/dist/client s3://localing-$ENVIRONMENT-static-assets/_nuxt --delete
          aws s3 sync nuxt-app/static s3://localing-$ENVIRONMENT-static-assets/static --delete

      - name: Install npm packages for Lambda Layer
        run: |
          cd .layer/nodejs
          npm install

      - name: Build by SAM
        run: |
          cp -r .nuxt/dist/server/* render/
          cp nuxt.config.js render/
          sam build

      - name: Packaging by SAM
        run: |
          sam package \
            --template-file template.yml \
            --s3-bucket ${{ secrets.CFN_TEMPLATES_BUCKET }} \
            --s3-prefix ssr-api-$ENVIRONMENT \
            --output-template-file deploy.yml

      - name: Deploy by SAM
        run: |
          sam deploy \
            --template-file deploy.yml \
            --stack-name localing-$ENVIRONMENT-ssr-api \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
                Environment=$ENVIRONMENT \
                CFSSLCertificateId=${{ secrets.CFSSL_CERTIFICATE_ID }}
